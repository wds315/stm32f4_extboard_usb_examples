; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM324xG-EVAL\stm32f4xx_syscfg.o --asm_dir=.\STM324xG-EVAL\ --list_dir=.\STM324xG-EVAL\ --depend=.\STM324xG-EVAL\stm32f4xx_syscfg.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -I..\ -I..\inc -I..\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\..\..\Utilities\STM32_EVAL -I..\..\..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DUSE_STM324xG_EVAL --omf_browse=.\STM324xG-EVAL\stm32f4xx_syscfg.crf ..\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_syscfg.c]
                          THUMB

                          AREA ||i.SYSCFG_CompensationCellCmd||, CODE, READONLY, ALIGN=2

                  SYSCFG_CompensationCellCmd PROC
;;;162      */
;;;163    void SYSCFG_CompensationCellCmd(FunctionalState NewState)
000000  4901              LDR      r1,|L1.8|
;;;164    {
;;;165      /* Check the parameters */
;;;166      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;167    
;;;168      *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;169    }
000004  4770              BX       lr
;;;170    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x42270400

                          AREA ||i.SYSCFG_DeInit||, CODE, READONLY, ALIGN=1

                  SYSCFG_DeInit PROC
;;;91       */
;;;92     void SYSCFG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;93     {
;;;94        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000002  2101              MOVS     r1,#1
000004  038c              LSLS     r4,r1,#14
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;95        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
00000c  4620              MOV      r0,r4
00000e  e8bd4010          POP      {r4,lr}
000012  2100              MOVS     r1,#0
000014  f7ffbffe          B.W      RCC_APB2PeriphResetCmd
;;;96     }
;;;97     
                          ENDP


                          AREA ||i.SYSCFG_ETH_MediaInterfaceConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_ETH_MediaInterfaceConfig PROC
;;;145      */
;;;146    void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
000000  4901              LDR      r1,|L3.8|
;;;147    { 
;;;148      assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
;;;149      /* Configure MII_RMII selection bit */ 
;;;150      *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
000002  6008              STR      r0,[r1,#0]
;;;151    }
000004  4770              BX       lr
;;;152    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x422700dc

                          AREA ||i.SYSCFG_EXTILineConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_EXTILineConfig PROC
;;;124      */
;;;125    void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
000000  b510              PUSH     {r4,lr}
;;;126    {
;;;127      uint32_t tmp = 0x00;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
;;;131      assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
;;;132    
;;;133      tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
000002  078a              LSLS     r2,r1,#30
;;;134      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
000004  f0210403          BIC      r4,r1,#3
000008  4906              LDR      r1,|L4.36|
00000a  0f13              LSRS     r3,r2,#28             ;133
00000c  4421              ADD      r1,r1,r4
00000e  220f              MOVS     r2,#0xf               ;133
000010  680c              LDR      r4,[r1,#0]
000012  409a              LSLS     r2,r2,r3              ;133
000014  4394              BICS     r4,r4,r2
000016  600c              STR      r4,[r1,#0]
;;;135      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
000018  680a              LDR      r2,[r1,#0]
00001a  4098              LSLS     r0,r0,r3
00001c  4302              ORRS     r2,r2,r0
00001e  600a              STR      r2,[r1,#0]
;;;136    }
000020  bd10              POP      {r4,pc}
;;;137    
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      0x40013808

                          AREA ||i.SYSCFG_GetCompensationCellStatus||, CODE, READONLY, ALIGN=2

                  SYSCFG_GetCompensationCellStatus PROC
;;;175      */
;;;176    FlagStatus SYSCFG_GetCompensationCellStatus(void)
000000  4903              LDR      r1,|L5.16|
;;;177    {
;;;178      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;179        
;;;180      if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
000004  6809              LDR      r1,[r1,#0]
000006  05c9              LSLS     r1,r1,#23
000008  d500              BPL      |L5.12|
;;;181      {
;;;182        bitstatus = SET;
00000a  2001              MOVS     r0,#1
                  |L5.12|
;;;183      }
;;;184      else
;;;185      {
;;;186        bitstatus = RESET;
;;;187      }
;;;188      return bitstatus;
;;;189    }
00000c  4770              BX       lr
;;;190    
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      0x40013820

                          AREA ||i.SYSCFG_MemoryRemapConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_MemoryRemapConfig PROC
;;;107      */
;;;108    void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
000000  4901              LDR      r1,|L6.8|
;;;109    {
;;;110      /* Check the parameters */
;;;111      assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
;;;112    
;;;113      SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
000002  6008              STR      r0,[r1,#0]
;;;114    }
000004  4770              BX       lr
;;;115    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40013800

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_syscfg.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_stm32f4xx_syscfg_c_57637610____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REVSH|
#line 128
|__asm___18_stm32f4xx_syscfg_c_57637610____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
