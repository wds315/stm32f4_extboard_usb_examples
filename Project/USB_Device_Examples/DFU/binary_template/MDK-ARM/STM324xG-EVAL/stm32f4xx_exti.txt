; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM324xG-EVAL\stm32f4xx_exti.o --asm_dir=.\STM324xG-EVAL\ --list_dir=.\STM324xG-EVAL\ --depend=.\STM324xG-EVAL\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -I..\ -I..\inc -I..\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\..\..\Utilities\STM32_EVAL -I..\..\..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DUSE_STM324xG_EVAL --omf_browse=.\STM324xG-EVAL\stm32f4xx_exti.crf ..\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;248      */
;;;249    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;255    }
000004  4770              BX       lr
;;;256    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;287      */
;;;288    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;289    {
;;;290      /* Check the parameters */
;;;291      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;292      
;;;293      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;294    }
000004  4770              BX       lr
;;;295    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;108      */
;;;109    void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;110    {
;;;111      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;112      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;113      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;114      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;115      EXTI->PR = 0x007FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;116    }
00001a  4770              BX       lr
;;;117    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;195      */
;;;196    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;197    {
;;;198      /* Check the parameters */
;;;199      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;200      
;;;201      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;202    }
000008  4770              BX       lr
;;;203    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;225      */
;;;226    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;227    {
000002  4601              MOV      r1,r0
;;;228      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;229      /* Check the parameters */
;;;230      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;231      
;;;232      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;233      {
;;;234        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
;;;239      }
;;;240      return bitstatus;
;;;241    }
00000e  4770              BX       lr
;;;242    
                          ENDP

                  |L5.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;262      */
;;;263    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a06              LDR      r2,|L6.28|
;;;264    {
000002  4601              MOV      r1,r0
;;;265      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;266      uint32_t enablestatus = 0;
;;;267      /* Check the parameters */
;;;268      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;269      
;;;270      enablestatus =  EXTI->IMR & EXTI_Line;
000006  6812              LDR      r2,[r2,#0]
;;;271      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  4b04              LDR      r3,|L6.28|
00000a  400a              ANDS     r2,r2,r1              ;270
00000c  3314              ADDS     r3,r3,#0x14
00000e  681b              LDR      r3,[r3,#0]
000010  420b              TST      r3,r1
000012  d002              BEQ      |L6.26|
000014  2a00              CMP      r2,#0
000016  d000              BEQ      |L6.26|
;;;272      {
;;;273        bitstatus = SET;
000018  2001              MOVS     r0,#1
                  |L6.26|
;;;274      }
;;;275      else
;;;276      {
;;;277        bitstatus = RESET;
;;;278      }
;;;279      return bitstatus;
;;;280    }
00001a  4770              BX       lr
;;;281    
                          ENDP

                  |L6.28|
                          DCD      0x40013c00

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;124      */
;;;125    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;126    {
;;;127      uint32_t tmp = 0;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;131      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;132      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;133      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;134    
;;;135      tmp = (uint32_t)EXTI_BASE;
000002  491b              LDR      r1,|L7.112|
;;;136         
;;;137      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6802              LDR      r2,[r0,#0]
000008  b363              CBZ      r3,|L7.100|
;;;138      {
;;;139        /* Clear EXTI line configuration */
;;;140        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  680b              LDR      r3,[r1,#0]
00000c  4393              BICS     r3,r3,r2
00000e  600b              STR      r3,[r1,#0]
;;;141        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d0a              ADDS     r2,r1,#4
000012  6813              LDR      r3,[r2,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  6013              STR      r3,[r2,#0]
;;;142        
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7902              LDRB     r2,[r0,#4]
00001c  440a              ADD      r2,r2,r1
;;;144    
;;;145        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  6813              LDR      r3,[r2,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  6013              STR      r3,[r2,#0]
;;;146    
;;;147        /* Clear Rising Falling edge configuration */
;;;148        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4a12              LDR      r2,|L7.112|
000028  3208              ADDS     r2,r2,#8
00002a  6813              LDR      r3,[r2,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a3              BICS     r3,r3,r4
000030  6013              STR      r3,[r2,#0]
;;;149        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d13              ADDS     r3,r2,#4
000034  681c              LDR      r4,[r3,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43ac              BICS     r4,r4,r5
00003a  601c              STR      r4,[r3,#0]
;;;150        
;;;151        /* Select the trigger for the selected external interrupts */
;;;152        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  f890c005          LDRB     r12,[r0,#5]
000040  f1bc0f10          CMP      r12,#0x10
000044  d005              BEQ      |L7.82|
;;;153        {
;;;154          /* Rising Falling edge */
;;;155          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;156          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;157        }
;;;158        else
;;;159        {
;;;160          tmp = (uint32_t)EXTI_BASE;
;;;161          tmp += EXTI_InitStruct->EXTI_Trigger;
000046  4461              ADD      r1,r1,r12
;;;162    
;;;163          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000048  680a              LDR      r2,[r1,#0]
00004a  6800              LDR      r0,[r0,#0]
00004c  4302              ORRS     r2,r2,r0
00004e  600a              STR      r2,[r1,#0]
;;;164        }
;;;165      }
;;;166      else
;;;167      {
;;;168        tmp += EXTI_InitStruct->EXTI_Mode;
;;;169    
;;;170        /* Disable the selected external lines */
;;;171        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;172      }
;;;173    }
000050  bd30              POP      {r4,r5,pc}
                  |L7.82|
000052  6811              LDR      r1,[r2,#0]            ;155
000054  6804              LDR      r4,[r0,#0]            ;155
000056  4321              ORRS     r1,r1,r4              ;155
000058  6011              STR      r1,[r2,#0]            ;155
00005a  6819              LDR      r1,[r3,#0]            ;156
00005c  6800              LDR      r0,[r0,#0]            ;156
00005e  4301              ORRS     r1,r1,r0              ;156
000060  6019              STR      r1,[r3,#0]            ;156
000062  bd30              POP      {r4,r5,pc}
                  |L7.100|
000064  7900              LDRB     r0,[r0,#4]            ;168
000066  4408              ADD      r0,r0,r1              ;168
000068  6801              LDR      r1,[r0,#0]            ;171
00006a  4391              BICS     r1,r1,r2              ;171
00006c  6001              STR      r1,[r0,#0]            ;171
00006e  bd30              POP      {r4,r5,pc}
;;;174    
                          ENDP

                  |L7.112|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;180      */
;;;181    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;182    {
;;;183      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;184      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;185      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;186      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;187    }
00000c  4770              BX       lr
;;;188    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
