; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\STM324xG-EVAL\stm32fxxx_it.o --asm_dir=.\STM324xG-EVAL\ --list_dir=.\STM324xG-EVAL\ --depend=.\STM324xG-EVAL\stm32fxxx_it.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -I..\ -I..\inc -I..\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\..\..\Utilities\STM32_EVAL -I..\..\..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DUSE_STM324xG_EVAL --omf_browse=.\STM324xG-EVAL\stm32fxxx_it.crf ..\src\stm32fxxx_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
                  |L1.0|
;;;83       */
;;;84     void BusFault_Handler(void)
000000  e7fe              B        |L1.0|
;;;85     {
;;;86       /* Go to infinite loop when Bus Fault exception occurs */
;;;87       while (1)
;;;88       {
;;;89       }
;;;90     }
;;;91     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;118      */
;;;119    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;120    {
;;;121    }
;;;122    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
                  |L3.0|
;;;57       */
;;;58     void HardFault_Handler(void)
000000  e7fe              B        |L3.0|
;;;59     {
;;;60       /* Go to infinite loop when Hard Fault exception occurs */
;;;61       while (1)
;;;62       {
;;;63       }
;;;64     }
;;;65     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
                  |L4.0|
;;;70       */
;;;71     void MemManage_Handler(void)
000000  e7fe              B        |L4.0|
;;;72     {
;;;73       /* Go to infinite loop when Memory Manage exception occurs */
;;;74       while (1)
;;;75       {
;;;76       }
;;;77     }
;;;78     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;48       */
;;;49     void NMI_Handler(void)
000000  4770              BX       lr
;;;50     {
;;;51     }
;;;52     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;127      */
;;;128    void PendSV_Handler(void)
000000  4770              BX       lr
;;;129    {
;;;130    }
;;;131    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;109      */
;;;110    void SVC_Handler(void)
000000  4770              BX       lr
;;;111    {
;;;112    }
;;;113    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;136      */
;;;137    void SysTick_Handler(void)
000000  f7ffbffe          B.W      TimingDelay_Decrement
;;;138    {
;;;139      TimingDelay_Decrement();
;;;140    }
;;;141    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
                  |L9.0|
;;;96       */
;;;97     void UsageFault_Handler(void)
000000  e7fe              B        |L9.0|
;;;98     {
;;;99       /* Go to infinite loop when Usage Fault exception occurs */
;;;100      while (1)
;;;101      {
;;;102      }
;;;103    }
;;;104    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\stm32fxxx_it.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_stm32fxxx_it_c_bb8ca80c____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_stm32fxxx_it_c_bb8ca80c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_stm32fxxx_it_c_bb8ca80c____REVSH|
#line 128
|__asm___14_stm32fxxx_it_c_bb8ca80c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
